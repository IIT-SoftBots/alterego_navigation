<?xml version="1.0"?>

<launch>

  <arg name="realsense"          default="false"/>
  <arg name="use_sim_time" default="false" />

  <arg name="AlterEgoVersion" default="3"/>
  <arg name="urdf_dir" value="$(find alterego_robot)/alterego_description/urdf/ego_robot_gazebo_v$(arg AlterEgoVersion).urdf.xacro" />
  <param name="robot_description"
      command="$(find xacro)/xacro '$(arg urdf_dir)' ENABLE_CAMERA:=false ENABLE_LASER:=false ENABLE_REALSENSE:=false" />


  <group ns="$(env ROBOT_NAME)">
    <!-- Convert the pointcloud in a laserscan -->


    <!-- 2D SLAM based on laserscan-->
    <node name="lidar"          pkg="rplidar_ros"  type="rplidarNode" output="screen" unless="$(arg use_sim_time)">
      <param name="serial_baudrate"     type="int"    value="115200"/>
      <param name="frame_id"            type="string" value="scan"/>
      <param name="inverted"            type="bool"   value="false"/>
      <param name="angle_compensate"    type="bool"   value="true"/>
    </node>

    <include file="$(find hector_mapping)/launch/mapping_default.launch">
      <arg name="base_frame" default="base_link"/>
      <arg name="odom_frame" default="odom"/>
    </include>

    <group if="$(arg realsense)">
      <!-- 3D Mapping using the pointcloud - in this way the map is considering also the forniture -->
      <include file="$(find realsense2_camera)/launch/rs_camera.launch" unless="$(arg use_sim_time)">
          <arg name="align_depth" value="true"/>
          <arg name="enable_pointcloud" value="true"/>
      </include>

      <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.05" />
        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="map" />
        <param name="base_frame_id" value="base_link"/>
        <!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="2.5" />
        <param name="pointcloud_min_z" value="0.3" />
        <param name="pointcloud_max_z" value="1.5" />
        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="camera/depth/color/points"/>
      </node>

      <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <param name="max_height" value="1.5"/>
        <param name="min_height" value="0.1"/>
        <param name="target_frame" value="scan"/>
        <remap from="cloud_in" to="camera/depth/color/points"/>
        <remap from="scan" to="camera/scan"/> 
      </node>
    </group>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" unless="$(arg use_sim_time)"/>  <!-- This file will be loaded only on the real robot because in simulation it has been already loaded-->
    <node pkg="visualize_robot" name="visualize_robot" type="visualize_robot_node" output="screen" unless="$(arg use_sim_time)"/>                               <!-- This file will be loaded only on the real robot because in simulation it has been already loaded-->

  </group>


</launch>
